This code for my  east west university data structure project. Which is implementation of Chained hash table.  

#include<stdio.h>
#include<stdlib.h>
#define size 7

struct node
{
    int data;
    struct node *next;
};

struct node *chain[size];

void initial()
{
    int i;
    for(i =0; i <size; i++)
        chain[i] = NULL;
}

void insert(int value)
{
    struct node *newNode = malloc(sizeof(struct node));
    newNode->data = value;
    newNode->next = NULL;

    int key = value % size;

    if(chain[key] == NULL)
    {
        chain[key] = newNode;
    }
    else
    {
        struct node *temp = chain[key];
        while(temp->next!=NULL)
        {
            temp = temp->next;
        }
        temp->next = newNode;
    }
}

void  Delete(int item)
{
   int key = item%size;

   struct node *temp = chain[key];
   struct node *temp1;

   if (temp->data==item)
   {
       chain[key]=temp->next;

   }
   else
   {
      while (temp->data!= item)
     {
       temp1= temp;
       temp= temp->next;
     }
     temp1->next= temp->next;
     free(temp);
   }
}

void search(int item)
{
    int key = item%size;

    struct node *temp = chain[key];
    if (chain[key]==NULL)
    {
        printf("Value Is Not Match Found ");
    }
   else
   {
      while (temp->next!= NULL)
     {
        if (temp->data==item)
        {
            printf("Your Value Is Match Found In The Hash Table");
            break;
        }
        temp=temp->next;
     }
    if (temp->data== item && temp->next==NULL)

    {
        printf(" Your Value Is  Match Found in The Hash Table");
    }
    if (temp->data!= item)
    {
        printf("Value Is Not Match Found ");
    }
   }
}

void print()
{
    for(int i=0;i<size;i++)
    {
        struct node *temp = chain[i];
        printf("chain[%d]-->",i);
        while(temp!=NULL)
        {
            printf("%d -->",temp->data);
            temp = temp->next;
        }
        printf("NULL\n");
    }
}

int main()
{
    initial();

    while (1)
    {
        printf("\n     MENU    \n");
        printf("\n1:Create Hash Table");
        printf("\n2:Display The Hash Table");
        printf("\n3:How Many Data Entry In The Hash Table");
        printf("\n4:Delete a Data From The Hash Table");
        printf("\n5:Search an Data From The Hash Table");
        printf("\n6:Exit\n");

        int choice,m,x,y;

        printf("\n\nEnter Your Choice:");
        scanf("%d",&choice);

    switch(choice)
    {

        int static count=0;

        case 1:

            printf("\nEnter Your Hash table Value:\n");

            scanf("%d",&m);
            insert(m);
            count++;
            break;

        case 2:

            printf("\n\nThis is Your Hash Table:\n\n" );
            print();
            break;

        case 3:

            printf("\n There are %d Value in Your Hash table\n",count);
            break;

        case 4:

           printf("\nWhat Value You Want to Delete From Hash Table: ");
           scanf("%d",&x);
           Delete(x);
           break;

        case 5:

           printf("\nEnter The Search Value In the Hash Table: ");
           scanf("%d",&y);
           search(y);
           break;

        case 6:
            printf("\nExited from program\n");
            exit(0);
            break;

        default:
            printf("\nInvalid Choice! Try Again!!!\n");
    }
 }
}
